package net.skyrimcraft.src.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelBench extends ModelBase {
	// fields
	ModelRenderer Plank1;
	ModelRenderer Plank2;
	ModelRenderer End1;
	ModelRenderer End2;
	ModelRenderer Bracket1;
	ModelRenderer Bracket2;
	ModelRenderer Bracket3;
	ModelRenderer Bracket4;
	ModelRenderer Support;
	ModelRenderer Leg1;
	ModelRenderer Leg2;
	ModelRenderer Piece1;
	ModelRenderer Piece2;
	ModelRenderer Piece3;
	ModelRenderer Piece4;
	ModelRenderer Piece5;
	ModelRenderer Piece6;
	ModelRenderer Piece7;
	ModelRenderer Piece8;
	ModelRenderer Piece9;
	ModelRenderer Piece10;
	ModelRenderer Piece11;
	ModelRenderer Piece12;
	ModelRenderer Piece13;
	ModelRenderer Piece14;
	ModelRenderer Piece15;
	ModelRenderer Piece16;

	public ModelBench() {
		textureWidth = 64;
		textureHeight = 64;

		Plank1 = new ModelRenderer(this, 0, 20);
		Plank1.addBox(0F, 0F, 0F, 48, 2, 7);
		Plank1.setRotationPoint(-24F, 12F, -8F);
		Plank1.setTextureSize(64, 32);
		Plank1.mirror = true;
		setRotation(Plank1, 0F, 0F, 0F);
		Plank2 = new ModelRenderer(this, 0, 20);
		Plank2.addBox(0F, 0F, 0F, 48, 2, 7);
		Plank2.setRotationPoint(-24F, 12F, 1F);
		Plank2.setTextureSize(64, 32);
		Plank2.mirror = true;
		setRotation(Plank2, 0F, 0F, 0F);
		End1 = new ModelRenderer(this, 0, 30);
		End1.addBox(0F, 0F, 0F, 3, 2, 16);
		End1.setRotationPoint(-24F, 12F, -8F);
		End1.setTextureSize(64, 32);
		End1.mirror = true;
		setRotation(End1, 0F, 0F, 0F);
		End2 = new ModelRenderer(this, 0, 30);
		End2.addBox(0F, 0F, 0F, 3, 2, 16);
		End2.setRotationPoint(21F, 12F, -8F);
		End2.setTextureSize(64, 32);
		End2.mirror = true;
		setRotation(End2, 0F, 0F, 0F);
		Bracket1 = new ModelRenderer(this, 0, 50);
		Bracket1.addBox(0F, 0F, 0F, 1, 4, 4);
		Bracket1.setRotationPoint(19F, 11F, -9F);
		Bracket1.setTextureSize(64, 32);
		Bracket1.mirror = true;
		setRotation(Bracket1, 0F, 0F, 0F);
		Bracket2 = new ModelRenderer(this, 0, 50);
		Bracket2.addBox(0F, 0F, 0F, 1, 4, 4);
		Bracket2.setRotationPoint(19F, 11F, 5F);
		Bracket2.setTextureSize(64, 32);
		Bracket2.mirror = true;
		setRotation(Bracket2, 0F, 0F, 0F);
		Bracket3 = new ModelRenderer(this, 0, 50);
		Bracket3.addBox(0F, 0F, 0F, 1, 4, 4);
		Bracket3.setRotationPoint(-20F, 11F, -9F);
		Bracket3.setTextureSize(64, 32);
		Bracket3.mirror = true;
		setRotation(Bracket3, 0F, 0F, 0F);
		Bracket4 = new ModelRenderer(this, 0, 50);
		Bracket4.addBox(0F, 0F, 0F, 1, 4, 4);
		Bracket4.setRotationPoint(-20F, 11F, 5F);
		Bracket4.setTextureSize(64, 32);
		Bracket4.mirror = true;
		setRotation(Bracket4, 0F, 0F, 0F);
		Support = new ModelRenderer(this, 0, 9);
		Support.addBox(0F, 0F, 0F, 42, 5, 2);
		Support.setRotationPoint(-21F, 14F, -1F);
		Support.setTextureSize(64, 32);
		Support.mirror = true;
		setRotation(Support, 0F, 0F, 0F);
		Leg1 = new ModelRenderer(this, 40, 40);
		Leg1.addBox(0F, 0F, 0F, 1, 10, 6);
		Leg1.setRotationPoint(-19F, 14F, -3F);
		Leg1.setTextureSize(64, 32);
		Leg1.mirror = true;
		setRotation(Leg1, 0F, 0F, 0F);
		Leg2 = new ModelRenderer(this, 40, 40);
		Leg2.addBox(0F, 0F, 0F, 1, 10, 6);
		Leg2.setRotationPoint(18F, 14F, -3F);
		Leg2.setTextureSize(64, 32);
		Leg2.mirror = true;
		setRotation(Leg2, 0F, 0F, 0F);
		Piece1 = new ModelRenderer(this, 0, 0);
		Piece1.addBox(0F, 0F, 0F, 1, 4, 1);
		Piece1.setRotationPoint(18F, 20F, -4F);
		Piece1.setTextureSize(64, 32);
		Piece1.mirror = true;
		setRotation(Piece1, 0F, 0F, 0F);
		Piece2 = new ModelRenderer(this, 0, 0);
		Piece2.addBox(0F, 0F, 0F, 1, 4, 1);
		Piece2.setRotationPoint(18F, 20F, 3F);
		Piece2.setTextureSize(64, 32);
		Piece2.mirror = true;
		setRotation(Piece2, 0F, 0F, 0F);
		Piece3 = new ModelRenderer(this, 0, 0);
		Piece3.addBox(0F, 0F, 0F, 1, 4, 1);
		Piece3.setRotationPoint(-19F, 20F, 3F);
		Piece3.setTextureSize(64, 32);
		Piece3.mirror = true;
		setRotation(Piece3, 0F, 0F, 0F);
		Piece4 = new ModelRenderer(this, 0, 0);
		Piece4.addBox(0F, 0F, 0F, 1, 4, 1);
		Piece4.setRotationPoint(-19F, 20F, -4F);
		Piece4.setTextureSize(64, 32);
		Piece4.mirror = true;
		setRotation(Piece4, 0F, 0F, 0F);
		Piece5 = new ModelRenderer(this, 10, 0);
		Piece5.addBox(0F, 0F, 0F, 1, 3, 1);
		Piece5.setRotationPoint(-19F, 21F, -5F);
		Piece5.setTextureSize(64, 32);
		Piece5.mirror = true;
		setRotation(Piece5, 0F, 0F, 0F);
		Piece6 = new ModelRenderer(this, 10, 0);
		Piece6.addBox(0F, 0F, 0F, 1, 3, 1);
		Piece6.setRotationPoint(-19F, 21F, 4F);
		Piece6.setTextureSize(64, 32);
		Piece6.mirror = true;
		setRotation(Piece6, 0F, 0F, 0F);
		Piece7 = new ModelRenderer(this, 10, 0);
		Piece7.addBox(0F, 0F, 0F, 1, 3, 1);
		Piece7.setRotationPoint(18F, 21F, 4F);
		Piece7.setTextureSize(64, 32);
		Piece7.mirror = true;
		setRotation(Piece7, 0F, 0F, 0F);
		Piece8 = new ModelRenderer(this, 10, 0);
		Piece8.addBox(0F, 0F, 0F, 1, 3, 1);
		Piece8.setRotationPoint(18F, 21F, -5F);
		Piece8.setTextureSize(64, 32);
		Piece8.mirror = true;
		setRotation(Piece8, 0F, 0F, 0F);
		Piece9 = new ModelRenderer(this, 16, 0);
		Piece9.addBox(0F, 0F, 0F, 1, 2, 1);
		Piece9.setRotationPoint(18F, 22F, -6F);
		Piece9.setTextureSize(64, 32);
		Piece9.mirror = true;
		setRotation(Piece9, 0F, 0F, 0F);
		Piece10 = new ModelRenderer(this, 16, 0);
		Piece10.addBox(0F, 0F, 0F, 1, 2, 1);
		Piece10.setRotationPoint(18F, 22F, 5F);
		Piece10.setTextureSize(64, 32);
		Piece10.mirror = true;
		setRotation(Piece10, 0F, 0F, 0F);
		Piece11 = new ModelRenderer(this, 16, 0);
		Piece11.addBox(0F, 0F, 0F, 1, 2, 1);
		Piece11.setRotationPoint(-19F, 22F, 5F);
		Piece11.setTextureSize(64, 32);
		Piece11.mirror = true;
		setRotation(Piece11, 0F, 0F, 0F);
		Piece12 = new ModelRenderer(this, 16, 0);
		Piece12.addBox(0F, 0F, 0F, 1, 2, 1);
		Piece12.setRotationPoint(-19F, 22F, -6F);
		Piece12.setTextureSize(64, 32);
		Piece12.mirror = true;
		setRotation(Piece12, 0F, 0F, 0F);
		Piece13 = new ModelRenderer(this, 24, 0);
		Piece13.addBox(0F, 0F, 0F, 1, 1, 1);
		Piece13.setRotationPoint(-19F, 23F, 6F);
		Piece13.setTextureSize(64, 32);
		Piece13.mirror = true;
		setRotation(Piece13, 0F, 0F, 0F);
		Piece14 = new ModelRenderer(this, 24, 0);
		Piece14.addBox(0F, 0F, 0F, 1, 1, 1);
		Piece14.setRotationPoint(-19F, 23F, -7F);
		Piece14.setTextureSize(64, 32);
		Piece14.mirror = true;
		setRotation(Piece14, 0F, 0F, 0F);
		Piece15 = new ModelRenderer(this, 24, 0);
		Piece15.addBox(0F, 0F, 0F, 1, 1, 1);
		Piece15.setRotationPoint(18F, 23F, 6F);
		Piece15.setTextureSize(64, 32);
		Piece15.mirror = true;
		setRotation(Piece15, 0F, 0F, 0F);
		Piece16 = new ModelRenderer(this, 24, 0);
		Piece16.addBox(0F, 0F, 0F, 1, 1, 1);
		Piece16.setRotationPoint(18F, 23F, -7F);
		Piece16.setTextureSize(64, 32);
		Piece16.mirror = true;
		setRotation(Piece16, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		Plank1.render(f5);
		Plank2.render(f5);
		End1.render(f5);
		End2.render(f5);
		Bracket1.render(f5);
		Bracket2.render(f5);
		Bracket3.render(f5);
		Bracket4.render(f5);
		Support.render(f5);
		Leg1.render(f5);
		Leg2.render(f5);
		Piece1.render(f5);
		Piece2.render(f5);
		Piece3.render(f5);
		Piece4.render(f5);
		Piece5.render(f5);
		Piece6.render(f5);
		Piece7.render(f5);
		Piece8.render(f5);
		Piece9.render(f5);
		Piece10.render(f5);
		Piece11.render(f5);
		Piece12.render(f5);
		Piece13.render(f5);
		Piece14.render(f5);
		Piece15.render(f5);
		Piece16.render(f5);
	}
	
	public void renderModel(float f5) {
		Plank1.render(f5);
		Plank2.render(f5);
		End1.render(f5);
		End2.render(f5);
		Bracket1.render(f5);
		Bracket2.render(f5);
		Bracket3.render(f5);
		Bracket4.render(f5);
		Support.render(f5);
		Leg1.render(f5);
		Leg2.render(f5);
		Piece1.render(f5);
		Piece2.render(f5);
		Piece3.render(f5);
		Piece4.render(f5);
		Piece5.render(f5);
		Piece6.render(f5);
		Piece7.render(f5);
		Piece8.render(f5);
		Piece9.render(f5);
		Piece10.render(f5);
		Piece11.render(f5);
		Piece12.render(f5);
		Piece13.render(f5);
		Piece14.render(f5);
		Piece15.render(f5);
		Piece16.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity ent) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, ent);
	}
}